PROGRAM->STATEMENT_LIST
PROGRAM->param ( FUNCTION_DECLARATION_LIST ) STATEMENT_LIST

STATEMENT_LIST->STATEMENT_LIST'
STATEMENT_LIST'->STATEMENT STATEMENT_LIST'
STATEMENT_LIST'->epsilon

STATEMENT->STATEMENT' ;
STATEMENT->IF
STATEMENT->WHILE
STATEMENT'->DECLARATION_LIST
STATEMENT'->ASSIGNMENT
STATEMENT'->OPERATION
STATEMENT'->READ
STATEMENT'->WRITE

FUNCTION_DECLARATION_LIST->FUNCTION_DECLARATION_LIST'
FUNCTION_DECLARATION_LIST'->DECLARATION FUNCTION_DECLARATION_LIST''
FUNCTION_DECLARATION_LIST'->epsilon
FUNCTION_DECLARATION_LIST''->, DECLARATION FUNCTION_DECLARATION_LIST''
FUNCTION_DECLARATION_LIST''->epsilon

DECLARATION_LIST->DECLARATION DECLARATION_LIST'
DECLARATION_LIST'->id DECLARATION_LIST''
DECLARATION_LIST''->, id DECLARATION_LIST''
DECLARATION_LIST''->epsilon

DECLARATION->[ TYPE ] id

TYPE->bool
TYPE->int
TYPE->string
TYPE->array

ASSIGNMENT->LHS ASSIGNMENT_OPERATOR RHS

LHS->id
LHS->DECLARATION

RHS->OPERATION
RHS->( OPERATION )

OPERATION->OPERATION'
OPERATION'->OPERAND OPERATION''
OPERATION''->ARITHMETIC_OPERATOR OPERAND OPERATION''
OPERATION''->epsilon

OPERAND->id
OPERAND->constant

READ->LHS ASSIGNMENT_OPERATOR Read-Host

WRITE->Write-Host WRITE'
WRITE'->OPERAND
WRITE'->string_constant

IF->if ( CONDITION ) { STATEMENT_LIST }

WHILE->while ( CONDITION ) { STATEMENT_LIST }

CONDITION->CONDITION'
CONDITION'->CONDITION''
CONDITION'->( CONDITION' ) LOGICAL_OPERATOR ( CONDITION' )
CONDITION''->OPERAND EQUALITY_OPERATOR OPERAND

ASSIGNMENT_OPERATOR->=

ARITHMETIC_OPERATOR->+
ARITHMETIC_OPERATOR->-
ARITHMETIC_OPERATOR->*
ARITHMETIC_OPERATOR->/
ARITHMETIC_OPERATOR->%

EQUALITY_OPERATOR->-lt
EQUALITY_OPERATOR->-le
EQUALITY_OPERATOR->-eq
EQUALITY_OPERATOR->-ne
EQUALITY_OPERATOR->-ge
EQUALITY_OPERATOR->-gt

LOGICAL_OPERATOR->-or
LOGICAL_OPERATOR->-and

