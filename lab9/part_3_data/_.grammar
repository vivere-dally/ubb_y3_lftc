PROGRAM'->PROGRAM
PROGRAM->STATEMENT_LIST
PROGRAM->param ( FUNCTION_DECLARATION_LIST ) STATEMENT_LIST

STATEMENT_LIST->STATEMENT_LIST'
STATEMENT_LIST'->STATEMENT STATEMENT_LIST'
STATEMENT_LIST'->epsilon

STATEMENT->DECLARATION_LIST_STATEMENT
STATEMENT->ASSIGNMENT_STATEMENT
STATEMENT->OPERATION_STATEMENT
STATEMENT->READ_STATEMENT
STATEMENT->WRITE_STATEMENT
STATEMENT->IF_STATEMENT
STATEMENT->WHILE_STATEMENT

FUNCTION_DECLARATION_LIST->FUNCTION_DECLARATION_LIST'
FUNCTION_DECLARATION_LIST'->DECLARATION FUNCTION_DECLARATION_LIST''
FUNCTION_DECLARATION_LIST'->epsilon
FUNCTION_DECLARATION_LIST''->, DECLARATION FUNCTION_DECLARATION_LIST''
FUNCTION_DECLARATION_LIST''->epsilon

DECLARATION_LIST_STATEMENT->DECLARATION DECLARATION_LIST_STATEMENT' ;
DECLARATION_LIST_STATEMENT'->id DECLARATION_LIST_STATEMENT''
DECLARATION_LIST_STATEMENT''->, id DECLARATION_LIST_STATEMENT''
DECLARATION_LIST_STATEMENT''->epsilon

DECLARATION->[ TYPE ] id

TYPE->bool|int|string|array

ASSIGNMENT_STATEMENT->LHS ASSIGNMENT_OPERATOR RHS ;

LHS->id|DECLARATION

RHS->OPERAND|OPERATION

OPERATION_STATEMENT->OPERATION ;

OPERATION->OPERATION'
OPERATION'->OPERAND'' ARITHMETIC_OPERATOR OPERAND''
OPERATION''->OPERATION'
OPERATION''->OPERAND

OPERAND->id|constant

READ_STATEMENT->LHS ASSIGNMENT_OPERATOR Read-Host ;

WRITE_STATEMENT->Write-Host WRITE_STATEMENT' ;
WRITE_STATEMENT'->OPERAND
WRITE_STATEMENT'->string_constant

IF_STATEMENT->if ( CONDITION ) { STATEMENT_LIST }

WHILE_STATEMENT->while { CONDITION ) { STATEMENT_LIST }

CONDITION->CONDITION'
CONDITION'->( CONDITION'' ) LOGICAL_OPERATOR ( CONDITION'' )
CONDITION''->CONDITION' EQUALITY_OPERATOR CONDITION'
CONDITION''->OPERAND

ASSIGNMENT_OPERATOR->=

ARITHMETIC_OPERATOR->+|-|*|/|%

EQUALITY_OPERATOR->-lt|-le|-eq|-ne|-ge|-gt

LOGICAL_OPERATOR->-or|-and
